{"version":3,"sources":["UserContext.js","components/UserItem/UserItem.js","components/ListByLetter/ListByLetter.js","helpers/alphabet.helper.js","components/Employees/Employees.js","helpers/month.helper.js","components/UserBirthdayItem/UserBirthdayItem.js","components/EmployeesBirthday/EmployeesBirthday.js","components/App/App.js","index.js"],"names":["UserContext","createContext","reducer","state","action","type","payload","user","filter","item","id","UserProvider","props","useReducer","localData","localStorage","getItem","JSON","parse","users","updateUsers","useEffect","setItem","stringify","Provider","value","children","UserItem","useState","checked","setChecked","useContext","find","className","firstName","lastName","name","onChange","ListByLetter","map","alphabet","Employees","data","Map","forEach","element","firstLetter","charAt","get","arr","push","sort","a","b","set","getAlphabetMap","i","getMonthArray","months","moment","currentMonth","format","position","findIndex","slice","getBirthdayMap","month","dob","UserBirthdayItem","EmployeesBirthday","length","App","usersList","setUsersList","fetch","process","then","res","json","ReactDOM","render","basename","exact","path","to","document","getElementById"],"mappings":"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","file":"static/js/main.204d915e.chunk.js","sourcesContent":["import React, { createContext, useEffect, useReducer } from 'react';\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'selectUser':\r\n            return [...state, action.payload.user];\r\n        case 'unselectUser':\r\n            return state.filter(item => item.id !== action.payload.user.id);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport function UserProvider(props) {\r\n    const [users, updateUsers] = useReducer(reducer, [], () => {\r\n        const localData = localStorage.getItem('users');\r\n        return localData ? JSON.parse(localData) : [];\r\n    });\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('users', JSON.stringify(users));\r\n    }, [users]);\r\n\r\n    return (\r\n        <UserContext.Provider value={{ updateUsers, users }}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    );\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react';\nimport { UserContext } from '../../UserContext';\nimport PropTypes from 'prop-types';\nimport './UserItem.css';\n\nconst UserItem = ({ user }) => {\n    const [checked, setChecked] = useState(false);\n    const { users, updateUsers } = useContext(UserContext);\n\n    useEffect(() => {\n        if (users.find(item => item.id === user.id)) {\n            setChecked(true);\n        }\n    }, [users, user]);\n\n    return (\n        <div className=\"userContainer\">\n            <div\n                className={`userName ${checked && 'selected'}`}\n            >{`${user.firstName} ${user.lastName}`}</div>\n            <span className=\"radioButtons\">\n                <div>\n                    <input\n                        type=\"radio\"\n                        name={user.id}\n                        value={true}\n                        checked={checked}\n                        onChange={() => {\n                            setChecked(true);\n                            updateUsers({\n                                type: 'selectUser',\n                                payload: {\n                                    user,\n                                },\n                            });\n                        }}\n                    />\n                    <span>active</span>\n                </div>\n\n                <div>\n                    <input\n                        type=\"radio\"\n                        name={user.id}\n                        value={false}\n                        checked={!checked}\n                        onChange={() => {\n                            setChecked(false);\n                            updateUsers({\n                                type: 'unselectUser',\n                                payload: {\n                                    user,\n                                },\n                            });\n                        }}\n                    />\n                    <span>not active</span>\n                </div>\n            </span>\n        </div>\n    );\n};\n\nUserItem.propTypes = {\n    user: PropTypes.shape({\n        id: PropTypes.string,\n        firstName: PropTypes.string,\n        lastName: PropTypes.string,\n        dob: PropTypes.string,\n    }).isRequired,\n};\n\nexport default UserItem;\n","import React from 'react';\nimport UserItem from './../UserItem';\nimport PropTypes from 'prop-types';\nimport './ListByLetter.css';\n\nconst ListByLetter = ({ users }) => {\n    return (\n        <div className=\"listByLetter\">\n            {users.map(user => {\n                return <UserItem user={user} key={user.id} />;\n            })}\n        </div>\n    );\n};\n\nListByLetter.propTypes = {\n    users: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n            firstName: PropTypes.string,\n            lastName: PropTypes.string,\n            dob: PropTypes.string,\n        }).isRequired,\n    ).isRequired,\n};\n\nexport default ListByLetter;\n","const alphabet = [\r\n    'A',\r\n    'B',\r\n    'C',\r\n    'D',\r\n    'E',\r\n    'F',\r\n    'G',\r\n    'H',\r\n    'I',\r\n    'J',\r\n    'K',\r\n    'L',\r\n    'M',\r\n    'N',\r\n    'O',\r\n    'P',\r\n    'Q',\r\n    'R',\r\n    'S',\r\n    'T',\r\n    'U',\r\n    'V',\r\n    'W',\r\n    'X',\r\n    'Y',\r\n    'Z',\r\n];\r\n\r\nconst getAlphabetMap = data => {\r\n    const map = new Map();\r\n    data.forEach(element => {\r\n        const firstLetter = element.firstName.charAt(0);\r\n        if (!map.get(firstLetter)) {\r\n            map.set(firstLetter, [element]);\r\n        } else {\r\n            let arr = map.get(firstLetter);\r\n            arr.push(element);\r\n            arr.sort((a, b) => (a.firstName > b.firstName ? 1 : -1));\r\n            map.set(firstLetter, arr);\r\n        }\r\n    });\r\n    return map;\r\n};\r\n\r\nexport { alphabet, getAlphabetMap };\r\n","import React from 'react';\nimport ListByLetter from '../ListByLetter';\nimport { getAlphabetMap, alphabet } from '../../helpers/alphabet.helper';\nimport PropTypes from 'prop-types';\nimport './Employees.css';\n\nconst Employees = ({ data }) => {\n    const users = getAlphabetMap(data);\n    return (\n        <div className=\"Employees\">\n            <h2>Employees</h2>\n            <div className=\"alphabet\">\n                <ul>\n                    {alphabet.map((item, i) => {\n                        return (\n                            <div key={i}>\n                                <li className=\"alphabetLetter\">\n                                    <div className=\"letter\">{item}</div>\n                                    <div className=\"usersByLetter\">\n                                        {users.get(item) ? (\n                                            <ListByLetter\n                                                users={users.get(item)}\n                                            />\n                                        ) : (\n                                            <div className=\"noEmployees\">\n                                                No Employees\n                                            </div>\n                                        )}\n                                    </div>\n                                </li>\n                                <hr />\n                            </div>\n                        );\n                    })}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nEmployees.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n            firstName: PropTypes.string,\n            lastName: PropTypes.string,\n            dob: PropTypes.string,\n        }),\n    ).isRequired,\n};\n\nexport default Employees;\n","import moment from 'moment';\r\n\r\nconst getMonthArray = () => {\r\n    let months = moment.months();\r\n    let currentMonth = moment().format('MMMM');\r\n    let position = months.findIndex(item => item === currentMonth);\r\n    return [...months.slice(position), ...months.slice(0, position)];\r\n};\r\n\r\nconst getBirthdayMap = data => {\r\n    const map = new Map();\r\n    data.forEach(element => {\r\n        const month = moment(element.dob).format('MMMM');\r\n        if (!map.get(month)) {\r\n            map.set(month, [element]);\r\n        } else {\r\n            let arr = map.get(month);\r\n            arr.push(element);\r\n            arr.sort((a, b) => (a.lastName > b.lastName ? 1 : -1));\r\n            map.set(month, arr);\r\n        }\r\n    });\r\n    return map;\r\n};\r\n\r\nexport { getMonthArray, getBirthdayMap };\r\n","import React from 'react';\nimport { getBirthdayMap } from '../../helpers/month.helper';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport './UserBirthdayItem.css';\n\nconst UserBirthdayItem = ({ users, month }) => {\n    return (\n        <div>\n            {getBirthdayMap(users).get(month) ? (\n                <ul>\n                    {getBirthdayMap(users)\n                        .get(month)\n                        .map(user => {\n                            return (\n                                <li key={user.id} className=\"userBirthday\">\n                                    {`${user.firstName} ${\n                                        user.lastName\n                                    } - ${moment(user.dob).format(\n                                        'DD MMMM, YYYY',\n                                    )} year`}\n                                </li>\n                            );\n                        })}\n                </ul>\n            ) : (\n                <div className=\"noUsers\">No Employees</div>\n            )}\n        </div>\n    );\n};\n\nUserBirthdayItem.propTypes = {\n    users: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n            firstName: PropTypes.string,\n            lastName: PropTypes.string,\n            dob: PropTypes.string,\n        }).isRequired,\n    ).isRequired,\n    month: PropTypes.string,\n};\n\nexport default UserBirthdayItem;\n","import React, { useContext } from 'react';\nimport { UserContext } from '../../UserContext';\nimport { getMonthArray } from '../../helpers/month.helper';\nimport UserBirthdayItem from './../UserBirthdayItem';\nimport './EmployeesBirthday.css';\n\nconst EmployeesBirthday = () => {\n    const { users } = useContext(UserContext);\n\n    return (\n        <div className=\"EmployeesBirthday\">\n            <h2>Employees birthday</h2>\n            {users.length === 0 ? (\n                <div className=\"emptyList\">Employees List is empty</div>\n            ) : (\n                <div className=\"birthdays\">\n                    <ul>\n                        {getMonthArray().map((item, i) => {\n                            return (\n                                <li key={i} className=\"usersByMonth\">\n                                    <div className=\"monthName\">{item}</div>\n                                    <div className=\"birthdayList\">\n                                        <UserBirthdayItem\n                                            users={users}\n                                            month={item}\n                                        />\n                                    </div>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default EmployeesBirthday;\n","import React, { useEffect, useState } from 'react';\nimport Employees from './../Employees';\nimport EmployeesBirthday from './../EmployeesBirthday';\nimport './App.css';\n\nconst App = () => {\n    const [usersList, setUsersList] = useState(null);\n\n    useEffect(() => {\n        fetch(process.env.REACT_APP_BASE_API_URL)\n            .then(res => res.json())\n            .then(data => setUsersList(data));\n    }, []);\n\n    if (usersList === null) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className=\"App\">\n            <Employees data={usersList} />\n            <EmployeesBirthday />\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { UserProvider } from './UserContext';\nimport { Route, BrowserRouter, Navigate, Routes } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Routes>\n            <Route exact path=\"/\" element={<Navigate to=\"/employees\" />} />\n            <Route\n                path=\"/employees\"\n                element={\n                    <UserProvider>\n                        <App />\n                    </UserProvider>\n                }\n            />\n            <Route exact path=\"*\" element={<Navigate to=\"/employees\" />} />\n        </Routes>\n    </BrowserRouter>,\n    document.getElementById('root'),\n); "],"sourceRoot":""}